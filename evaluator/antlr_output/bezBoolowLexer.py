# Generated from C:/Users/fudal/OneDrive/Dokumenty/GitHub/Genetyczne/evaluator\bezBoolow.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,30,192,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,1,0,1,0,4,0,64,8,0,11,0,12,
        0,65,1,0,5,0,69,8,0,10,0,12,0,72,9,0,3,0,74,8,0,1,1,4,1,77,8,1,11,
        1,12,1,78,1,1,4,1,82,8,1,11,1,12,1,83,1,1,1,1,5,1,88,8,1,10,1,12,
        1,91,9,1,1,1,1,1,4,1,95,8,1,11,1,12,1,96,3,1,99,8,1,1,2,1,2,1,2,
        1,3,1,3,1,3,1,4,1,4,5,4,109,8,4,10,4,12,4,112,9,4,1,5,1,5,1,6,1,
        6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
        1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,19,
        1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,4,23,155,8,23,
        11,23,12,23,156,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,
        1,28,1,29,4,29,184,8,29,11,29,12,29,185,1,29,1,29,1,29,1,29,1,29,
        0,0,30,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
        25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
        47,24,49,25,51,26,53,27,55,28,57,29,59,30,1,0,2,3,0,9,10,13,13,32,
        32,3,0,48,57,65,90,97,122,203,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,
        0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,
        0,57,1,0,0,0,0,59,1,0,0,0,1,73,1,0,0,0,3,98,1,0,0,0,5,100,1,0,0,
        0,7,103,1,0,0,0,9,106,1,0,0,0,11,113,1,0,0,0,13,115,1,0,0,0,15,117,
        1,0,0,0,17,119,1,0,0,0,19,121,1,0,0,0,21,123,1,0,0,0,23,125,1,0,
        0,0,25,127,1,0,0,0,27,129,1,0,0,0,29,131,1,0,0,0,31,133,1,0,0,0,
        33,135,1,0,0,0,35,138,1,0,0,0,37,141,1,0,0,0,39,143,1,0,0,0,41,145,
        1,0,0,0,43,148,1,0,0,0,45,151,1,0,0,0,47,154,1,0,0,0,49,160,1,0,
        0,0,51,166,1,0,0,0,53,168,1,0,0,0,55,170,1,0,0,0,57,176,1,0,0,0,
        59,183,1,0,0,0,61,74,2,49,57,0,62,64,2,49,57,0,63,62,1,0,0,0,64,
        65,1,0,0,0,65,63,1,0,0,0,65,66,1,0,0,0,66,70,1,0,0,0,67,69,2,48,
        57,0,68,67,1,0,0,0,69,72,1,0,0,0,70,68,1,0,0,0,70,71,1,0,0,0,71,
        74,1,0,0,0,72,70,1,0,0,0,73,61,1,0,0,0,73,63,1,0,0,0,74,2,1,0,0,
        0,75,77,2,49,57,0,76,75,1,0,0,0,77,78,1,0,0,0,78,76,1,0,0,0,78,79,
        1,0,0,0,79,99,1,0,0,0,80,82,2,48,57,0,81,80,1,0,0,0,82,83,1,0,0,
        0,83,81,1,0,0,0,83,84,1,0,0,0,84,85,1,0,0,0,85,89,5,46,0,0,86,88,
        2,48,57,0,87,86,1,0,0,0,88,91,1,0,0,0,89,87,1,0,0,0,89,90,1,0,0,
        0,90,99,1,0,0,0,91,89,1,0,0,0,92,94,5,46,0,0,93,95,2,48,57,0,94,
        93,1,0,0,0,95,96,1,0,0,0,96,94,1,0,0,0,96,97,1,0,0,0,97,99,1,0,0,
        0,98,76,1,0,0,0,98,81,1,0,0,0,98,92,1,0,0,0,99,4,1,0,0,0,100,101,
        3,7,3,0,101,102,3,9,4,0,102,6,1,0,0,0,103,104,5,118,0,0,104,105,
        5,95,0,0,105,8,1,0,0,0,106,110,2,49,57,0,107,109,2,48,57,0,108,107,
        1,0,0,0,109,112,1,0,0,0,110,108,1,0,0,0,110,111,1,0,0,0,111,10,1,
        0,0,0,112,110,1,0,0,0,113,114,5,40,0,0,114,12,1,0,0,0,115,116,5,
        41,0,0,116,14,1,0,0,0,117,118,5,123,0,0,118,16,1,0,0,0,119,120,5,
        125,0,0,120,18,1,0,0,0,121,122,5,43,0,0,122,20,1,0,0,0,123,124,5,
        45,0,0,124,22,1,0,0,0,125,126,5,42,0,0,126,24,1,0,0,0,127,128,5,
        47,0,0,128,26,1,0,0,0,129,130,5,62,0,0,130,28,1,0,0,0,131,132,5,
        60,0,0,132,30,1,0,0,0,133,134,5,61,0,0,134,32,1,0,0,0,135,136,5,
        61,0,0,136,137,5,61,0,0,137,34,1,0,0,0,138,139,5,33,0,0,139,140,
        5,61,0,0,140,36,1,0,0,0,141,142,5,34,0,0,142,38,1,0,0,0,143,144,
        5,94,0,0,144,40,1,0,0,0,145,146,5,105,0,0,146,147,5,102,0,0,147,
        42,1,0,0,0,148,149,5,32,0,0,149,150,5,38,0,0,150,44,1,0,0,0,151,
        152,5,124,0,0,152,46,1,0,0,0,153,155,7,0,0,0,154,153,1,0,0,0,155,
        156,1,0,0,0,156,154,1,0,0,0,156,157,1,0,0,0,157,158,1,0,0,0,158,
        159,6,23,0,0,159,48,1,0,0,0,160,161,5,119,0,0,161,162,5,104,0,0,
        162,163,5,105,0,0,163,164,5,108,0,0,164,165,5,101,0,0,165,50,1,0,
        0,0,166,167,5,59,0,0,167,52,1,0,0,0,168,169,5,33,0,0,169,54,1,0,
        0,0,170,171,5,112,0,0,171,172,5,114,0,0,172,173,5,105,0,0,173,174,
        5,110,0,0,174,175,5,116,0,0,175,56,1,0,0,0,176,177,5,105,0,0,177,
        178,5,110,0,0,178,179,5,112,0,0,179,180,5,117,0,0,180,181,5,116,
        0,0,181,58,1,0,0,0,182,184,7,1,0,0,183,182,1,0,0,0,184,185,1,0,0,
        0,185,183,1,0,0,0,185,186,1,0,0,0,186,187,1,0,0,0,187,188,5,46,0,
        0,188,189,5,116,0,0,189,190,5,120,0,0,190,191,5,116,0,0,191,60,1,
        0,0,0,13,0,65,70,73,78,83,89,96,98,110,156,183,185,1,6,0,0
    ]

class bezBoolowLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    NUM = 1
    FLOAT = 2
    VARIABLE = 3
    VAR_NAME = 4
    ID_VAR = 5
    LPAREN = 6
    RPAREN = 7
    LPARENCURLY = 8
    RPARENCURLY = 9
    PLUS = 10
    MINUS = 11
    TIMES = 12
    DIV = 13
    GT = 14
    LT = 15
    EQ = 16
    EQ_LOGICAL = 17
    NOT_EQ_LOGICAL = 18
    QUOTATION = 19
    POW = 20
    IF = 21
    AND = 22
    OR = 23
    WS = 24
    WHILE = 25
    ENDCHAR = 26
    NOT = 27
    PRINT = 28
    INPUT = 29
    FILENAME = 30

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'v_'", "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", 
            "'>'", "'<'", "'='", "'=='", "'!='", "'\"'", "'^'", "'if'", 
            "' &'", "'|'", "'while'", "';'", "'!'", "'print'", "'input'" ]

    symbolicNames = [ "<INVALID>",
            "NUM", "FLOAT", "VARIABLE", "VAR_NAME", "ID_VAR", "LPAREN", 
            "RPAREN", "LPARENCURLY", "RPARENCURLY", "PLUS", "MINUS", "TIMES", 
            "DIV", "GT", "LT", "EQ", "EQ_LOGICAL", "NOT_EQ_LOGICAL", "QUOTATION", 
            "POW", "IF", "AND", "OR", "WS", "WHILE", "ENDCHAR", "NOT", "PRINT", 
            "INPUT", "FILENAME" ]

    ruleNames = [ "NUM", "FLOAT", "VARIABLE", "VAR_NAME", "ID_VAR", "LPAREN", 
                  "RPAREN", "LPARENCURLY", "RPARENCURLY", "PLUS", "MINUS", 
                  "TIMES", "DIV", "GT", "LT", "EQ", "EQ_LOGICAL", "NOT_EQ_LOGICAL", 
                  "QUOTATION", "POW", "IF", "AND", "OR", "WS", "WHILE", 
                  "ENDCHAR", "NOT", "PRINT", "INPUT", "FILENAME" ]

    grammarFileName = "bezBoolow.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


